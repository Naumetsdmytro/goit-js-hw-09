{"mappings":"AAAA,SAASA,EAAeC,GACtB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAmBnC,MAAMC,EAAUC,YAAYC,EAAgB,KAE5C,SAASA,IACP,MAAMC,EAAMC,KAAKD,MAGXE,EAFW,IAAID,KAAK,KAAM,EAAG,GAAI,GAAI,GAElBD,EAErBE,EAAQ,EACVC,cAAcN,GAIhBO,QAAQC,IA7BV,SAAmBC,GACjB,MACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EASZ,MAAO,C,KAPMhB,EAAekB,KAAKC,MAAMN,EAAKI,I,MAC9BjB,EAAekB,KAAKC,MAAMN,EAAMI,EAAOD,I,QACrChB,EAAekB,KAAKC,MAAMN,EAAOI,EAAOD,EAAQF,I,QAChDd,EACdkB,KAAKC,MAAMN,EAAQI,EAAOD,EAAQF,EATrB,M,CA4BHM,CAAUX,G,CAGxBH","sources":["src/js/02-timer.js"],"sourcesContent":["function addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nconst timerId = setInterval(countdownTimer, 1000);\n\nfunction countdownTimer() {\n  const now = Date.now();\n  const tomorrow = new Date(2023, 0, 26, 13, 6);\n\n  const delta = tomorrow - now;\n\n  if (delta < 0) {\n    clearInterval(timerId);\n    return;\n  }\n\n  console.log(convertMs(delta));\n}\n\ncountdownTimer();\n"],"names":["$40d383fb392a7037$var$addLeadingZero","value","String","padStart","$40d383fb392a7037$var$timerId","setInterval","$40d383fb392a7037$var$countdownTimer","now","Date","delta","clearInterval","console","log","ms","minute","second","hour","day","Math","floor","$40d383fb392a7037$var$convertMs"],"version":3,"file":"02-timer.920a06df.js.map"}